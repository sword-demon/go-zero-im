FROM alpine:3.18

# 添加时区处理
RUN echo -e "https://mirrors.aliyun.com/alpine/v3.15/main\nhttps://mirrors.aliyun.com/alpine/v3.15/community" > /etc/apk/repositories && \
    apk update && \
    apk --no-cache add tzdata && \
    cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \
    echo "Asia/Shanghai" > /etc/timezone

ENV TZ=Asia/Shanghai

ARG SERVER_NAME=user
ARG SERVER_TYPE=rpc

ENV RUN_BIN bin/${SERVER_NAME}-${SERVER_TYPE}
ENV RUN_CONF /${SERVER_NAME}/conf/${SERVER_NAME}.yaml

RUN mkdir /$SERVER_NAME && mkdir /$SERVER_NAME/bin && mkdir /$SERVER_NAME/conf

# 复制编译后的二进制文件
COPY ./bin/$SERVER_NAME-$SERVER_TYPE /$SERVER_NAME/bin/

# 复制配置文件
COPY ./apps/$SERVER_NAME/$SERVER_TYPE/etc/dev/$SERVER_NAME.yaml /$SERVER_NAME/conf/

# 为二进制文件提供权限
RUN chmod +x /$SERVER_NAME/bin/$SERVER_NAME-$SERVER_TYPE

# 指定容器默认进入的目录
WORKDIR /$SERVER_NAME

# 容器启动就执行的命令
# 与CMD不同之处是，在docker run 后跟的命令不能替换它，它仍然会启动的时候执行
# ENTRYPOINT ["$RUN_BIN", "-f", "$RUN_CONF"] // 这种写法不支持对环境变量的解析，
#您正在使用ENTRYPOINT 的exec形式。与shell表单不同，exec表单不会调用命令shell。这意味着正常的外壳处理不会发生。例如，ENTRYPOINT [ "echo", "$HOME" ]
# 将不会在$ HOME上进行变量替换。如果要进行shell处理，则可以使用shell形式或直接执行shell，例如：ENTRYPOINT [ "sh", "-c", "echo $HOME" ]。
#当使用exec表单并直接执行shell时（例如在shell表单中），是由shell进行环境变量扩展，而不是docker。（来自Dockerfile参考）

ENTRYPOINT $RUN_BIN -f $RUN_CONF